<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content="Create an account with Stem Sphere" />
    <meta name="author" content="Stem Sphere" />
    <link
      rel="icon"
      href="https://hebbkx1anhila5yf.public.blob.vercel-storage.com/logo_new-w6KEs6cSM0d52sz3yBrPNNPgx59M49.png"
      type="image/png"
    />
    <title>Create Account | Stem Sphere</title>
    <style>
      @import url("https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap");

      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: "Poppins", sans-serif;
      }

      :root {
        --primary: #8b1d3d;
        --secondary: #1e2833;
        --accent: #ffd2dd;
        --text: #333333;
        --background: #ffffff;
        --transition: all 0.3s ease-in-out;
      }

      body {
        background-color: #f5f5f5;
        min-height: 100vh;
        padding: 0;
        line-height: 1.6;
      }

      .header {
        width: 90%;
        max-width: 1200px;
        margin: 0 auto;
        display: flex;
        justify-content: space-between;
        align-items: center;
        flex-wrap: wrap;
        gap: 1rem;
        padding: 1rem;
        background: var(--background);
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        border-radius: 0;
        position: relative;
      }

      .logo {
        width: 60px;
        height: 60px;
        border-radius: 50%;
        background-image: url("https://hebbkx1anhila5yf.public.blob.vercel-storage.com/logo_new-w6KEs6cSM0d52sz3yBrPNNPgx59M49.png");
        background-size: cover;
        transition: var(--transition);
      }

      .header-buttons {
        display: flex;
        gap: 1rem;
      }

      .button {
        padding: 0.5rem 1rem;
        border: 1px solid var(--primary);
        color: var(--primary);
        border-radius: 5px;
        text-decoration: none;
        cursor: pointer;
        transition: var(--transition), transform 0.2s ease, box-shadow 0.3s ease;
      }

      .button:hover {
        color: white;
        background: var(--primary);
        transform: scale(1.05);
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
      }

      .header-title {
        text-align: center;
        width: 100%;
        margin-top: 1rem;
        color: var(--primary);
      }

      .header-title h1 {
        font-size: 2rem;
        margin-bottom: 0.5rem;
      }

      .header-title p {
        font-size: 0.9rem;
        color: var(--text);
      }

      .create-account-wrapper {
        display: flex;
        width: 90%;
        max-width: 600px;
        margin: 2rem auto;
        background: var(--background);
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        border-radius: 8px;
        overflow: hidden;
      }

      .create-account-form {
        width: 100%;
        padding: 2rem;
        background: var(--background);
      }

      .create-account-form h2 {
        text-align: center;
        margin-bottom: 2rem;
        color: var(--text);
      }

      .form-group {
        margin-bottom: 1.5rem;
      }

      .form-group label {
        display: block;
        margin-bottom: 0.5rem;
        color: var(--secondary);
        font-size: 0.9rem;
      }

      .form-group input {
        width: 100%;
        padding: 0.75rem;
        border: 1px solid #e2e8f0;
        border-radius: 4px;
        font-size: 1rem;
        transition: var(--transition);
      }

      .form-group input:focus {
        outline: none;
        border-color: var(--primary);
        box-shadow: 0 0 0 2px rgba(139, 29, 61, 0.1);
      }

      .form-group input:user-invalid {
        border-color: #ff3333;
      }

      .form-group input:valid {
        border-color: #28a745;
      }

      .success-message,
      .error-message {
        text-align: center;
        padding: 1rem;
        border-radius: 4px;
        margin-bottom: 1.5rem;
        display: none;
      }

      .success-message {
        background-color: #28a745;
        color: white;
      }

      .error-message {
        background-color: #ff3333;
        color: white;
      }

      .submit-btn {
        width: 100%;
        padding: 1rem;
        background-color: var(--primary);
        color: white;
        border: none;
        border-radius: 4px;
        font-size: 1rem;
        cursor: pointer;
        transition: var(--transition);
      }

      .submit-btn:hover {
        background-color: #541124;
        transform: translateY(-2px);
        box-shadow: 0 4px 10px rgba(40, 167, 69, 0.2);
      }

      .login-link {
        text-align: center;
        margin-top: 1rem;
      }

      .login-link a {
        color: var(--primary);
        text-decoration: none;
        font-size: 0.9rem;
        transition: var(--transition);
      }

      .login-link a:hover {
        color: #541124;
        text-decoration: underline;
      }

      @media (max-width: 768px) {
        .header {
          flex-direction: column;
          text-align: center;
        }

        .header-buttons {
          width: 100%;
          justify-content: center;
        }

        .header-title {
          margin-top: 1rem;
        }

        .create-account-wrapper {
          width: 95%;
        }

        .create-account-form {
          padding: 1rem;
        }
      }
    </style>
  </head>

  <body>
    <header class="header">
      <div class="logo"></div>
      <div class="header-buttons">
        <a href="/" class="button">Home</a>
        <a href="/contact" class="button">Contact</a>
      </div>
      <div class="header-title">
        <h1>Create Account</h1>
        <p>Create your Stem Sphere account</p>
      </div>
    </header>

    <div class="create-account-wrapper">
      <div class="create-account-form">
        <h2>Create Your Account</h2>
        <div id="success-message" class="success-message">
          <p>User has been created! You can now login using your credentials.</p>
        </div>
        <div id="error-message" class="error-message"></div>
        <form id="create-account-form" action="/create-account" method="POST" novalidate>
          <div class="form-group">
            <label for="username">Username *</label>
            <input
              type="text"
              id="username"
              name="username"
              placeholder="Choose a username"
              required
              pattern="[A-Za-z0-9_]{3,}"
              title="Username must be at least 3 characters long and can only contain letters, numbers, and underscores"
            />
          </div>
          <div class="form-group">
            <label for="email">Email Address *</label>
            <input
              type="email"
              id="email"
              name="email"
              placeholder="example@email.com"
              required
            />
          </div>
          <div class="form-group">
            <label for="password">Password *</label>
            <input
              type="password"
              id="password"
              name="password"
              placeholder="Create a password"
              required
              minlength="8"
              title="Password must be at least 8 characters long"
            />
          </div>
          <div class="form-group">
            <label for="confirm-password">Confirm Password *</label>
            <input
              type="password"
              id="confirm-password"
              name="confirm-password"
              placeholder="Confirm your password"
              required
              minlength="8"
              title="Password must be at least 8 characters long"
            />
          </div>
          <button type="submit" class="submit-btn">CREATE ACCOUNT</button>
          <div class="login-link">
            <p>Already have an account? <a href="/login">Login</a></p>
          </div>
        </form>
      </div>
    </div>

    <script>
      document.addEventListener('DOMContentLoaded', () => {
        const elements = document.querySelectorAll('h1, h2, label, input, button, p');
        elements.forEach((el, index) => {
          el.style.opacity = '0';
          el.style.transform = 'translateY(20px)';
          setTimeout(() => {
            el.style.transition = 'opacity 0.5s ease, transform 0.5s ease';
            el.style.opacity = '1';
            el.style.transform = 'translateY(0)';
          }, index * 100);
        });

        const form = document.getElementById('create-account-form');
        const successMessage = document.getElementById('success-message');
        const errorMessage = document.getElementById('error-message');

        form.addEventListener('submit', async (e) => {
          e.preventDefault();

          if (!form.checkValidity()) {
            alert("Please fill in all required fields correctly.");
            form.reportValidity();
            return;
          }

          const password = form.querySelector('#password').value;
          const confirmPassword = form.querySelector('#confirm-password').value;
          if (password !== confirmPassword) {
            errorMessage.style.display = 'block';
            errorMessage.textContent = 'Passwords do not match.';
            return;
          }

          const formData = new FormData(form);
          const data = Object.fromEntries(formData);

          successMessage.style.display = 'none';
          errorMessage.style.display = 'none';
          errorMessage.innerHTML = '';

          try {
            const response = await fetch(form.action, {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
              },
              body: JSON.stringify(data),
            });

            const result = await response.json();

            if (response.ok) {
              successMessage.style.display = 'block';
              setTimeout(() => {
                window.location.href = '/login';
              }, 3000);
            } else {
              errorMessage.style.display = 'block';
              result.errors?.forEach(error => {
                const p = document.createElement('p');
                p.textContent = error.msg;
                errorMessage.appendChild(p);
              }) || (errorMessage.textContent = result.message || 'An error occurred.');
            }
          } catch (err) {
            errorMessage.style.display = 'block';
            errorMessage.textContent = 'An error occurred. Please try again.';
          }
        });
      });
    </script>
  </body>
</html>